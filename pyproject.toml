[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mvde"
version = "0.1.0"
description = "Monocular VLM Depth Embeddings - Distance-augmented Vision-Language Models"
authors = [{name = "Laura Mullings", email = "laura@example.com"}]
license = {text = "CC-BY-NC-SA-4.0"}
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "transformers>=4.30.0",
    "accelerate>=0.20.0",
    "omegaconf>=2.3.0",
    "hydra-core>=1.3.0",
    "opencv-python>=4.8.0",
    "pillow>=10.0.0",
    "numpy>=1.24.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "tqdm>=4.65.0",
    "wandb>=0.15.0",
    "timm>=0.9.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "ruff>=0.0.270",
    "pre-commit>=3.3.0",
    "jupyter>=1.0.0",
    "ipywidgets>=8.0.0",
]
depth = [
    "midas>=1.0.0",
    "zoe-depth>=1.0.0",
]
datasets = [
    "datasets>=2.13.0",
    "pycocotools>=2.0.6",
]

[project.urls]
Homepage = "https://github.com/yourusername/Monocular-VLM-Depth-Embeddings"
Repository = "https://github.com/yourusername/Monocular-VLM-Depth-Embeddings"
Issues = "https://github.com/yourusername/Monocular-VLM-Depth-Embeddings/issues"

[project.scripts]
mvde-infer = "mvde.pipelines.infer:main"
mvde-train = "mvde.pipelines.train_head:main"
mvde-dump = "mvde.io.serialization:dump_embeddings_cli"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mvde"]

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
]
